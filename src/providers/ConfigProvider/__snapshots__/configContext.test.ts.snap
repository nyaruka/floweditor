// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Providers: ConfigProvider: configContext configContext should return app config 1`] = `
Object {
  "actionConfigList": Array [
    Object {
      "advanced": 1,
      "allows": [Function],
      "component": [Function],
      "description": "Send them a message",
      "form": [Function],
      "name": "Send Message",
      "type": "reply",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Add them to a group",
      "form": [Function],
      "name": "Add to Group",
      "type": "add_to_group",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Remove them from a group",
      "form": [Function],
      "name": "Remove from Group",
      "type": "remove_from_group",
    },
    Object {
      "aliases": Array [
        "update_contact",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Update the contact",
      "form": [Function],
      "name": "Update Contact",
      "type": "save_contact_field",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Send an email",
      "form": [Function],
      "name": "Send Email",
      "type": "send_email",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Save a result for this flow",
      "form": [Function],
      "name": "Save Flow Result",
      "type": "save_flow_result",
    },
    Object {
      "allows": [Function],
      "description": "Split by group membership",
      "form": [Function],
      "name": "Split by Group Membership",
      "type": "group",
    },
  ],
  "baseLanguage": Object {
    "iso": "eng",
    "name": "English",
  },
  "endpoints": Object {
    "activity": "",
    "contacts": "/assets/contacts.json",
    "engine": "",
    "fields": "/assets/fields.json",
    "flows": "/assets/flows.json",
    "groups": "/assets/groups.json",
  },
  "flow": "a4f64f1b-85bc-477e-b706-de313a022979",
  "getActivity": [Function],
  "getFlow": [Function],
  "getFlows": [Function],
  "getOperatorConfig": [Function],
  "getTypeConfig": [Function],
  "languages": Object {
    "eng": "English",
    "fre": "French",
    "spa": "Spanish",
  },
  "operatorConfigList": Array [
    Object {
      "operands": 1,
      "type": "has_any_word",
      "verboseName": "has any of the words",
    },
    Object {
      "operands": 1,
      "type": "has_all_words",
      "verboseName": "has all of the words",
    },
    Object {
      "operands": 1,
      "type": "has_phrase",
      "verboseName": "has the phrase",
    },
    Object {
      "operands": 1,
      "type": "has_only_phrase",
      "verboseName": "has only the phrase",
    },
    Object {
      "operands": 1,
      "type": "has_beginning",
      "verboseName": "starts with",
    },
    Object {
      "categoryName": "Has Text",
      "operands": 0,
      "type": "has_text",
      "verboseName": "has some text",
    },
    Object {
      "categoryName": "Has Number",
      "operands": 0,
      "type": "has_number",
      "verboseName": "has a number",
    },
    Object {
      "operands": 2,
      "type": "has_number_between",
      "verboseName": "has a number between",
    },
    Object {
      "operands": 1,
      "type": "has_number_lt",
      "verboseName": "has a number below",
    },
    Object {
      "operands": 1,
      "type": "has_number_lte",
      "verboseName": "has a number at or below",
    },
    Object {
      "operands": 1,
      "type": "has_number_eq",
      "verboseName": "has a number equal to",
    },
    Object {
      "operands": 1,
      "type": "has_number_gte",
      "verboseName": "has a number at or above",
    },
    Object {
      "operands": 1,
      "type": "has_number_gt",
      "verboseName": "has a number above",
    },
    Object {
      "categoryName": "Has Date",
      "operands": 0,
      "type": "has_date",
      "verboseName": "has a date",
    },
    Object {
      "operands": 1,
      "type": "has_date_lt",
      "verboseName": "has a date before",
    },
    Object {
      "operands": 1,
      "type": "has_date_eq",
      "verboseName": "has a date equal to",
    },
    Object {
      "operands": 1,
      "type": "has_date_gt",
      "verboseName": "has a date after",
    },
    Object {
      "operands": 1,
      "type": "has_run_status",
      "verboseName": "has a run status of",
    },
    Object {
      "operands": 1,
      "type": "has_group",
      "verboseName": "is in the group",
    },
    Object {
      "categoryName": "Has Phone",
      "operands": 0,
      "type": "has_phone",
      "verboseName": "has a phone number",
    },
    Object {
      "categoryName": "Has Email",
      "operands": 0,
      "type": "has_email",
      "verboseName": "has an email",
    },
    Object {
      "categoryName": "Has Error",
      "operands": 0,
      "type": "has_error",
      "verboseName": "has an error",
    },
    Object {
      "categoryName": "Not Empty",
      "operands": 0,
      "type": "has_value",
      "verboseName": "is not empty",
    },
  ],
  "operatorConfigMap": Object {
    "has_all_words": Object {
      "operands": 1,
      "type": "has_all_words",
      "verboseName": "has all of the words",
    },
    "has_any_word": Object {
      "operands": 1,
      "type": "has_any_word",
      "verboseName": "has any of the words",
    },
    "has_beginning": Object {
      "operands": 1,
      "type": "has_beginning",
      "verboseName": "starts with",
    },
    "has_date": Object {
      "categoryName": "Has Date",
      "operands": 0,
      "type": "has_date",
      "verboseName": "has a date",
    },
    "has_date_eq": Object {
      "operands": 1,
      "type": "has_date_eq",
      "verboseName": "has a date equal to",
    },
    "has_date_gt": Object {
      "operands": 1,
      "type": "has_date_gt",
      "verboseName": "has a date after",
    },
    "has_date_lt": Object {
      "operands": 1,
      "type": "has_date_lt",
      "verboseName": "has a date before",
    },
    "has_email": Object {
      "categoryName": "Has Email",
      "operands": 0,
      "type": "has_email",
      "verboseName": "has an email",
    },
    "has_error": Object {
      "categoryName": "Has Error",
      "operands": 0,
      "type": "has_error",
      "verboseName": "has an error",
    },
    "has_group": Object {
      "operands": 1,
      "type": "has_group",
      "verboseName": "is in the group",
    },
    "has_number": Object {
      "categoryName": "Has Number",
      "operands": 0,
      "type": "has_number",
      "verboseName": "has a number",
    },
    "has_number_between": Object {
      "operands": 2,
      "type": "has_number_between",
      "verboseName": "has a number between",
    },
    "has_number_eq": Object {
      "operands": 1,
      "type": "has_number_eq",
      "verboseName": "has a number equal to",
    },
    "has_number_gt": Object {
      "operands": 1,
      "type": "has_number_gt",
      "verboseName": "has a number above",
    },
    "has_number_gte": Object {
      "operands": 1,
      "type": "has_number_gte",
      "verboseName": "has a number at or above",
    },
    "has_number_lt": Object {
      "operands": 1,
      "type": "has_number_lt",
      "verboseName": "has a number below",
    },
    "has_number_lte": Object {
      "operands": 1,
      "type": "has_number_lte",
      "verboseName": "has a number at or below",
    },
    "has_only_phrase": Object {
      "operands": 1,
      "type": "has_only_phrase",
      "verboseName": "has only the phrase",
    },
    "has_phone": Object {
      "categoryName": "Has Phone",
      "operands": 0,
      "type": "has_phone",
      "verboseName": "has a phone number",
    },
    "has_phrase": Object {
      "operands": 1,
      "type": "has_phrase",
      "verboseName": "has the phrase",
    },
    "has_run_status": Object {
      "operands": 1,
      "type": "has_run_status",
      "verboseName": "has a run status of",
    },
    "has_text": Object {
      "categoryName": "Has Text",
      "operands": 0,
      "type": "has_text",
      "verboseName": "has some text",
    },
    "has_value": Object {
      "categoryName": "Not Empty",
      "operands": 0,
      "type": "has_value",
      "verboseName": "is not empty",
    },
  },
  "saveFlow": [Function],
  "typeConfigList": Array [
    Object {
      "advanced": 1,
      "allows": [Function],
      "component": [Function],
      "description": "Send them a message",
      "form": [Function],
      "name": "Send Message",
      "type": "reply",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Add them to a group",
      "form": [Function],
      "name": "Add to Group",
      "type": "add_to_group",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Remove them from a group",
      "form": [Function],
      "name": "Remove from Group",
      "type": "remove_from_group",
    },
    Object {
      "aliases": Array [
        "update_contact",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Update the contact",
      "form": [Function],
      "name": "Update Contact",
      "type": "save_contact_field",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Send an email",
      "form": [Function],
      "name": "Send Email",
      "type": "send_email",
    },
    Object {
      "allows": [Function],
      "component": [Function],
      "description": "Save a result for this flow",
      "form": [Function],
      "name": "Save Flow Result",
      "type": "save_flow_result",
    },
    Object {
      "advanced": 1,
      "aliases": Array [
        "webhook",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Call a webook",
      "form": [Function],
      "name": "Call Webhook",
      "type": "call_webhook",
    },
    Object {
      "aliases": Array [
        "subflow",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Run another flow",
      "form": [Function],
      "name": "Run Flow",
      "type": "start_flow",
    },
    Object {
      "advanced": 2,
      "allows": [Function],
      "description": "Split by a custom expression",
      "form": [Function],
      "name": "Split by Expression",
      "type": "expression",
    },
    Object {
      "allows": [Function],
      "description": "Split by group membership",
      "form": [Function],
      "name": "Split by Group Membership",
      "type": "group",
    },
    Object {
      "advanced": 2,
      "aliases": Array [
        "switch",
      ],
      "allows": [Function],
      "description": "Wait for them to respond",
      "form": [Function],
      "name": "Wait for Response",
      "type": "wait_for_response",
    },
  ],
  "typeConfigMap": Object {
    "add_to_group": Object {
      "allows": [Function],
      "component": [Function],
      "description": "Add them to a group",
      "form": [Function],
      "name": "Add to Group",
      "type": "add_to_group",
    },
    "call_webhook": Object {
      "advanced": 1,
      "aliases": Array [
        "webhook",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Call a webook",
      "form": [Function],
      "name": "Call Webhook",
      "type": "call_webhook",
    },
    "expression": Object {
      "advanced": 2,
      "allows": [Function],
      "description": "Split by a custom expression",
      "form": [Function],
      "name": "Split by Expression",
      "type": "expression",
    },
    "group": Object {
      "allows": [Function],
      "description": "Split by group membership",
      "form": [Function],
      "name": "Split by Group Membership",
      "type": "group",
    },
    "remove_from_group": Object {
      "allows": [Function],
      "component": [Function],
      "description": "Remove them from a group",
      "form": [Function],
      "name": "Remove from Group",
      "type": "remove_from_group",
    },
    "reply": Object {
      "advanced": 1,
      "allows": [Function],
      "component": [Function],
      "description": "Send them a message",
      "form": [Function],
      "name": "Send Message",
      "type": "reply",
    },
    "save_contact_field": Object {
      "aliases": Array [
        "update_contact",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Update the contact",
      "form": [Function],
      "name": "Update Contact",
      "type": "save_contact_field",
    },
    "save_flow_result": Object {
      "allows": [Function],
      "component": [Function],
      "description": "Save a result for this flow",
      "form": [Function],
      "name": "Save Flow Result",
      "type": "save_flow_result",
    },
    "send_email": Object {
      "allows": [Function],
      "component": [Function],
      "description": "Send an email",
      "form": [Function],
      "name": "Send Email",
      "type": "send_email",
    },
    "start_flow": Object {
      "aliases": Array [
        "subflow",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Run another flow",
      "form": [Function],
      "name": "Run Flow",
      "type": "start_flow",
    },
    "subflow": Object {
      "aliases": Array [
        "subflow",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Run another flow",
      "form": [Function],
      "name": "Run Flow",
      "type": "start_flow",
    },
    "switch": Object {
      "advanced": 2,
      "aliases": Array [
        "switch",
      ],
      "allows": [Function],
      "description": "Wait for them to respond",
      "form": [Function],
      "name": "Wait for Response",
      "type": "wait_for_response",
    },
    "update_contact": Object {
      "aliases": Array [
        "update_contact",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Update the contact",
      "form": [Function],
      "name": "Update Contact",
      "type": "save_contact_field",
    },
    "wait_for_response": Object {
      "advanced": 2,
      "aliases": Array [
        "switch",
      ],
      "allows": [Function],
      "description": "Wait for them to respond",
      "form": [Function],
      "name": "Wait for Response",
      "type": "wait_for_response",
    },
    "webhook": Object {
      "advanced": 1,
      "aliases": Array [
        "webhook",
      ],
      "allows": [Function],
      "component": [Function],
      "description": "Call a webook",
      "form": [Function],
      "name": "Call Webhook",
      "type": "call_webhook",
    },
  },
}
`;

exports[`Providers: ConfigProvider: configContext getBaseLanguage should return the config's base language 1`] = `
Object {
  "iso": "eng",
  "name": "English",
}
`;
