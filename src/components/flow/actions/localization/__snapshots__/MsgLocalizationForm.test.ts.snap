// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MsgLocalizationForm inits inits with initial values 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="send_msg"
  tabs={
    Array [
      Object {
        "body": <React.Fragment>
          <MultiChoiceInput
            helpText={
              <Trans
                i18nKey="forms.localized_quick_replies"
                values={
                  Object {
                    "language": "Spanish",
                  }
                }
              >
                Add a new [[language]] Quick Reply and press enter.
              </Trans>
            }
            items={
              Object {
                "value": Array [],
              }
            }
            maxItems={10}
            name="Quick Reply"
            onChange={[Function]}
          />
        </React.Fragment>,
        "checked": false,
        "name": "Quick Replies",
      },
      Object {
        "body": <React.Fragment>
          <p>
            Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.
          </p>
          <div
            className="url_attachment"
          >
            <div
              className="type_choice"
            >
              <SelectElement
                entry={
                  Object {
                    "value": null,
                  }
                }
                name="Type Options"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "name": "Upload Attachment",
                      "value": "upload",
                    },
                    Object {
                      "name": "Image URL",
                      "value": "image",
                    },
                    Object {
                      "name": "Audio URL",
                      "value": "audio",
                    },
                    Object {
                      "name": "Video URL",
                      "value": "video",
                    },
                    Object {
                      "name": "PDF Document URL",
                      "value": "application",
                    },
                  ]
                }
                placeholder="Add Attachment"
                style="small"
              />
            </div>
          </div>
          <input
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </React.Fragment>,
        "checked": false,
        "name": "Attachments",
      },
    ]
  }
  title="Send Message"
>
  <div
    data-spec="translation-container"
  >
    <div
      className="translate_from"
      data-spec="text-to-translate"
    >
      Hey!
    </div>
  </div>
  <TextInputElement
    __className="message"
    autocomplete={true}
    entry={
      Object {
        "value": "Â¡hola!",
      }
    }
    focus={true}
    maxLength={10000}
    name="Message"
    onChange={[Function]}
    placeholder="Spanish Translation"
    showLabel={false}
    textarea={true}
  />
</Dialog>
`;

exports[`MsgLocalizationForm render should render 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="send_msg"
  tabs={
    Array [
      Object {
        "body": <React.Fragment>
          <MultiChoiceInput
            helpText={
              <Trans
                i18nKey="forms.localized_quick_replies"
                values={
                  Object {
                    "language": "Spanish",
                  }
                }
              >
                Add a new [[language]] Quick Reply and press enter.
              </Trans>
            }
            items={
              Object {
                "value": Array [],
              }
            }
            maxItems={10}
            name="Quick Reply"
            onChange={[Function]}
          />
        </React.Fragment>,
        "checked": false,
        "name": "Quick Replies",
      },
      Object {
        "body": <React.Fragment>
          <p>
            Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.
          </p>
          <div
            className="url_attachment"
          >
            <div
              className="type_choice"
            >
              <SelectElement
                entry={
                  Object {
                    "value": null,
                  }
                }
                name="Type Options"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "name": "Upload Attachment",
                      "value": "upload",
                    },
                    Object {
                      "name": "Image URL",
                      "value": "image",
                    },
                    Object {
                      "name": "Audio URL",
                      "value": "audio",
                    },
                    Object {
                      "name": "Video URL",
                      "value": "video",
                    },
                    Object {
                      "name": "PDF Document URL",
                      "value": "application",
                    },
                  ]
                }
                placeholder="Add Attachment"
                style="small"
              />
            </div>
          </div>
          <input
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </React.Fragment>,
        "checked": false,
        "name": "Attachments",
      },
    ]
  }
  title="Send Message"
>
  <div
    data-spec="translation-container"
  >
    <div
      className="translate_from"
      data-spec="text-to-translate"
    >
      Hey!
    </div>
  </div>
  <TextInputElement
    __className="message"
    autocomplete={true}
    entry={
      Object {
        "value": "",
      }
    }
    focus={true}
    maxLength={10000}
    name="Message"
    onChange={[Function]}
    placeholder="Spanish Translation"
    showLabel={false}
    textarea={true}
  />
</Dialog>
`;

exports[`MsgLocalizationForm updates should ignore empty quick replies 1`] = `
Object {
  "attachments": Array [],
  "audio": Object {
    "value": null,
  },
  "message": Object {
    "value": "",
  },
  "quickReplies": Object {
    "validationFailures": Array [],
    "value": Array [],
  },
  "template": null,
  "templateVariables": Array [],
  "uploadError": "",
  "uploadInProgress": false,
  "valid": true,
}
`;

exports[`MsgLocalizationForm updates should ignore empty quick replies 2`] = `
Array [
  "spa",
  Array [
    Object {
      "translations": Object {
        "attachments": Array [],
        "template_variables": Array [],
      },
      "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
    },
  ],
]
`;

exports[`MsgLocalizationForm updates should save changes 1`] = `
Object {
  "attachments": Array [],
  "audio": Object {
    "value": null,
  },
  "message": Object {
    "validationFailures": Array [],
    "value": "What is your favorite color?",
  },
  "quickReplies": Object {
    "validationFailures": Array [],
    "value": Array [
      "red",
      "green",
      "blue",
    ],
  },
  "template": null,
  "templateVariables": Array [],
  "uploadError": "",
  "uploadInProgress": false,
  "valid": true,
}
`;

exports[`MsgLocalizationForm updates should save changes 2`] = `
Array [
  "spa",
  Array [
    Object {
      "translations": Object {
        "attachments": Array [],
        "quick_replies": Array [
          "red",
          "green",
          "blue",
        ],
        "template_variables": Array [],
        "text": "What is your favorite color?",
      },
      "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
    },
  ],
]
`;
